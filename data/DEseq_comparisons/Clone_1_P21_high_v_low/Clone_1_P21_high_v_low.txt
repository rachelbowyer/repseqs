file_name=c('p21High_clone_1_merge')
paste0(file_name,'.csv')
a = paste0(file_name,'.csv')
a
###DEseq plots of DRMS samples C and D
library(DESeq)
library(dplyr)
file_name=c('Clone_1_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=1)
file_name=c('Clone_2_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=1)
###DEseq plots of DRMS samples C and D
library(DESeq)
library(dplyr)
file_name=c('Clone_2_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=1)
dataFile <- select(dataFile_raw, 3:12)
##edit experiment design
dataDesign = data.frame(rows.name=colnames(dataFile),condition=c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"),
libType=c("single-end","single-end","single-end","single-end","single-end",
"single-end","single-end","single-end","single-end","single-end"))
condition = factor(c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"))
cds = newCountDataSet(dataFile,condition)
cds = estimateSizeFactors(cds)
sizeFactors(cds)
normTable = counts(cds,normalized=TRUE)
write.table(normTable,paste0(file_name, '.txt'),quote=FALSE,sep='\t')
cds = estimateDispersions(cds, method='pooled')
str(fitInfo(cds))
png(paste0(file_name, '.png'))
plotDispEsts(cds)
dev.off()
res = nbinomTest(cds,"Exp2","Ctl2")
png(paste0(file_name, '.png'))
plotMA(res, ylim=c(-8,8))
##take out infinite values and NaN values and replot MA plot
#convert res to tbl and remove -Inf and Inf values
tbl_res <- tbl_df(res)
tbl_res_no_inf <- filter(tbl_res, log2FoldChange != -Inf, log2FoldChange != Inf)
png(paste0(file_name, '.png'))
plotMA(tbl_res_no_inf)
dev.off()
resSig = res[ res$padj < 0.05, ]
resSig = res
resSig = resSig[ order(resSig$pval), ]
#add info to no_inf_file
write.table(resSig,paste0(file_name, '.csv'),quote=FALSE,sep=',')
write.table(tbl_res_no_inf,paste0(file_name, '.csv'),quote=FALSE,sep=',')
savehistory(file=paste0(file_name, '.txt'))
file_name=c('Clone_2_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=1)
dataFile <- select(dataFile_raw, 3:12)
##edit experiment design
dataDesign = data.frame(rows.name=colnames(dataFile),condition=c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"),
libType=c("single-end","single-end","single-end","single-end","single-end",
"single-end","single-end","single-end","single-end","single-end"))
dataFile <- select(dataFile_raw, 3:12)
View(dataFile_raw)
###DEseq plots of DRMS samples C and D
library(DESeq)
library(dplyr)
file_name=c('Clone_2_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'_input.csv'),sep=',',header=TRUE,row.names=1)
dataFile <- select(dataFile_raw, 3:12)
##edit experiment design
dataDesign = data.frame(rows.name=colnames(dataFile),condition=c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"),
libType=c("single-end","single-end","single-end","single-end","single-end",
"single-end","single-end","single-end","single-end","single-end"))
condition = factor(c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"))
cds = newCountDataSet(dataFile,condition)
cds = estimateSizeFactors(cds)
sizeFactors(cds)
normTable = counts(cds,normalized=TRUE)
write.table(normTable,paste0(file_name, '.txt'),quote=FALSE,sep='\t')
cds = estimateDispersions(cds, method='pooled')
str(fitInfo(cds))
png(paste0(file_name, '.png'))
plotDispEsts(cds)
dev.off()
res = nbinomTest(cds,"Exp2","Ctl2")
png(paste0(file_name, '.png'))
plotMA(res, ylim=c(-8,8))
##take out infinite values and NaN values and replot MA plot
#convert res to tbl and remove -Inf and Inf values
tbl_res <- tbl_df(res)
tbl_res_no_inf <- filter(tbl_res, log2FoldChange != -Inf, log2FoldChange != Inf)
png(paste0(file_name, '.png'))
plotMA(tbl_res_no_inf)
dev.off()
resSig = res[ res$padj < 0.05, ]
resSig = res
resSig = resSig[ order(resSig$pval), ]
#add info to no_inf_file
write.table(resSig,paste0(file_name, '_output.csv'),quote=FALSE,sep=',')
write.table(tbl_res_no_inf,paste0(file_name, 'output_no_inf.csv'),quote=FALSE,sep=',')
savehistory(file=paste0(file_name, '.txt'))
###DEseq plots of DRMS samples C and D
library(DESeq)
library(dplyr)
file_name=c('Clone_2_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=1)
dataFile <- select(dataFile_raw, 3:12)
##edit experiment design
dataDesign = data.frame(rows.name=colnames(dataFile),condition=c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"),
libType=c("single-end","single-end","single-end","single-end","single-end",
"single-end","single-end","single-end","single-end","single-end"))
condition = factor(c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"))
cds = newCountDataSet(dataFile,condition)
cds = estimateSizeFactors(cds)
sizeFactors(cds)
normTable = counts(cds,normalized=TRUE)
write.table(normTable,paste0(file_name, '.txt'),quote=FALSE,sep='\t')
cds = estimateDispersions(cds, method='pooled')
str(fitInfo(cds))
png(paste0(file_name, '.png'))
plotDispEsts(cds)
dev.off()
res = nbinomTest(cds,"Exp2","Ctl2")
png(paste0(file_name, '.png'))
plotMA(res, ylim=c(-8,8))
##take out infinite values and NaN values and replot MA plot
#convert res to tbl and remove -Inf and Inf values
tbl_res <- tbl_df(res)
tbl_res_no_inf <- filter(tbl_res, log2FoldChange != -Inf, log2FoldChange != Inf)
png(paste0(file_name, '.png'))
plotMA(tbl_res_no_inf)
dev.off()
resSig = res[ res$padj < 0.05, ]
resSig = res
resSig = resSig[ order(resSig$pval), ]
#add info to no_inf_file
write.table(resSig,paste0(file_name, '_output.csv'),quote=FALSE,sep=',')
write.table(tbl_res_no_inf,paste0(file_name, 'output_no_inf.csv'),quote=FALSE,sep=',')
savehistory(file=paste0(file_name, '.txt'))
##This script calculates differential expression between two different samples
library(DESeq)
library(dplyr)
#edit file name
file_name=c('Clone_2_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=1)
dataFile <- select(dataFile_raw, 3:12)
##edit experiment design
dataDesign = data.frame(rows.name=colnames(dataFile),condition=c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"),
libType=c("single-end","single-end","single-end","single-end","single-end",
"single-end","single-end","single-end","single-end","single-end"))
condition = factor(c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"))
#The rest should run without modification
cds = newCountDataSet(dataFile,condition)
cds = estimateSizeFactors(cds)
sizeFactors(cds)
normTable = counts(cds,normalized=TRUE)
write.table(normTable,paste0(file_name, '.txt'),quote=FALSE,sep='\t')
cds = estimateDispersions(cds, method='pooled')
str(fitInfo(cds))
png(paste0(file_name, '.png'))
plotDispEsts(cds)
dev.off()
res = nbinomTest(cds,"Exp2","Ctl2")
png(paste0(file_name, '.png'))
plotMA(res, ylim=c(-8,8))
##take out infinite values and NaN values and replot MA plot
#convert res to tbl and remove -Inf and Inf values
tbl_res <- tbl_df(res)
tbl_res_no_inf <- filter(tbl_res, log2FoldChange != -Inf, log2FoldChange != Inf)
png(paste0(file_name, '.png'))
plotMA(tbl_res_no_inf)
dev.off()
resSig = res[ res$padj < 0.05, ]
resSig = res
resSig = resSig[ order(resSig$pval), ]
#add info to no_inf_file
write.table(resSig,paste0(file_name, '_output.csv'),quote=FALSE,sep=',')
write.table(tbl_res_no_inf,paste0(file_name, 'output_no_inf.csv'),quote=FALSE,sep=',')
savehistory(file=paste0(file_name, '.txt'))
##This script calculates differential expression between two different samples
library(DESeq)
library(dplyr)
#edit file name
file_name=c('Clone_2_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=1)
dataFile <- select(dataFile_raw, 3:12)
##edit experiment design
dataDesign = data.frame(rows.name=colnames(dataFile),condition=c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"),
libType=c("single-end","single-end","single-end","single-end","single-end",
"single-end","single-end","single-end","single-end","single-end"))
condition = factor(c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"))
#The rest should run without modification
cds = newCountDataSet(dataFile,condition)
cds = estimateSizeFactors(cds)
sizeFactors(cds)
normTable = counts(cds,normalized=TRUE)
write.table(normTable,paste0(file_name, '.txt'),quote=FALSE,sep='\t')
cds = estimateDispersions(cds, method='pooled')
str(fitInfo(cds))
png(paste0(file_name, '.png'))
plotDispEsts(cds)
dev.off()
res = nbinomTest(cds,"Exp2","Ctl2")
png(paste0(file_name, '.png'))
plotMA(res, ylim=c(-8,8))
##take out infinite values and NaN values and replot MA plot
#convert res to tbl and remove -Inf and Inf values
tbl_res <- tbl_df(res)
tbl_res_no_inf <- filter(tbl_res, log2FoldChange != -Inf, log2FoldChange != Inf)
png(paste0(file_name, '.png'))
plotMA(tbl_res_no_inf)
dev.off()
resSig = res[ res$padj < 0.05, ]
resSig = res
resSig = resSig[ order(resSig$pval), ]
#add info to no_inf_file
write.table(resSig,paste0(file_name, '_output.csv'),quote=FALSE,sep=',',row.names=FALSE)
write.table(tbl_res_no_inf,paste0(file_name, 'output_no_inf.csv'),quote=FALSE,sep=',',row.names=FALSE)
savehistory(file=paste0(file_name, '.txt'))
##This script calculates differential expression between two different samples
library(DESeq)
library(dplyr)
#edit file name
file_name=c('Clone_2_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=1)
dataFile <- select(dataFile_raw, 3:12)
##edit experiment design
dataDesign = data.frame(rows.name=colnames(dataFile),condition=c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"),
libType=c("single-end","single-end","single-end","single-end","single-end",
"single-end","single-end","single-end","single-end","single-end"))
condition = factor(c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"))
#The rest should run without modification
cds = newCountDataSet(dataFile,condition)
cds = estimateSizeFactors(cds)
sizeFactors(cds)
normTable = counts(cds,normalized=TRUE)
write.table(normTable,paste0(file_name, '.txt'),quote=FALSE,sep='\t')
cds = estimateDispersions(cds, method='pooled')
str(fitInfo(cds))
png(paste0(file_name, '.png'))
plotDispEsts(cds)
dev.off()
res = nbinomTest(cds,"Exp2","Ctl2")
png(paste0(file_name, '.png'))
plotMA(res, ylim=c(-8,8))
##take out infinite values and NaN values and replot MA plot
#convert res to tbl and remove -Inf and Inf values
tbl_res <- tbl_df(res)
tbl_res_no_inf <- filter(tbl_res, log2FoldChange != -Inf, log2FoldChange != Inf)
png(paste0(file_name, '.png'))
plotMA(tbl_res_no_inf)
dev.off()
resSig = res[ res$padj < 0.05, ]
resSig = res
resSig = resSig[ order(resSig$pval), ]
#add info to no_inf_file
write.table(resSig,paste0(file_name, '_output.csv'),quote=FALSE,sep=',',row.names=FALSE)
write.table(tbl_res_no_inf,paste0(file_name, '_output_no_inf.csv'),quote=FALSE,sep=',',row.names=FALSE)
savehistory(file=paste0(file_name, '.txt'))
View(dataFile)
View(dataFile_raw)
##This script calculates differential expression between two different samples
library(DESeq)
library(dplyr)
#edit file name
file_name=c('Clone_1_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=1)
#edit file name
file_name=c('Clone_1_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=1)
View(dataFile_raw)
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=2)
View(dataFile_raw)
dataFile <- select(dataFile_raw, 3:12)
View(dataFile)
dataFile <- select(dataFile_raw, 4:13)
View(dataFile)
##This script calculates differential expression between two different samples
library(DESeq)
library(dplyr)
#edit file name
file_name=c('Clone_1_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=2)
dataFile <- select(dataFile_raw, 4:13)
##edit experiment design
dataDesign = data.frame(rows.name=colnames(dataFile),condition=c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"),
libType=c("single-end","single-end","single-end","single-end","single-end",
"single-end","single-end","single-end","single-end","single-end"))
condition = factor(c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"))
#The rest should run without modification
cds = newCountDataSet(dataFile,condition)
cds = estimateSizeFactors(cds)
sizeFactors(cds)
normTable = counts(cds,normalized=TRUE)
write.table(normTable,paste0(file_name, '.txt'),quote=FALSE,sep='\t')
cds = estimateDispersions(cds, method='pooled')
str(fitInfo(cds))
png(paste0(file_name, '.png'))
plotDispEsts(cds)
dev.off()
res = nbinomTest(cds,"Exp2","Ctl2")
png(paste0(file_name, '.png'))
plotMA(res, ylim=c(-8,8))
##take out infinite values and NaN values and replot MA plot
#convert res to tbl and remove -Inf and Inf values
tbl_res <- tbl_df(res)
tbl_res_no_inf <- filter(tbl_res, log2FoldChange != -Inf, log2FoldChange != Inf)
png(paste0(file_name, '.png'))
plotMA(tbl_res_no_inf)
dev.off()
resSig = res[ res$padj < 0.05, ]
resSig = res
resSig = resSig[ order(resSig$pval), ]
#add info to no_inf_file
write.table(resSig,paste0(file_name, '_output.csv'),quote=FALSE,sep=',',row.names=FALSE)
write.table(tbl_res_no_inf,paste0(file_name, '_output_no_inf.csv'),quote=FALSE,sep=',',row.names=FALSE)
savehistory(file=paste0(file_name, '.txt'))
##This script calculates differential expression between two different samples
library(DESeq)
library(dplyr)
#edit file name
file_name=c('Clone_1_P21_high_v_low')
setwd(paste0('~/software_engineering_for_scientists/quiescence_project/repseqs/data/DEseq_comparisons/', file_name, '/'))
dataFile_raw = read.delim(paste0(file_name,'.csv'),sep=',',header=TRUE,row.names=2)
dataFile <- select(dataFile_raw, 4:13)
##edit experiment design
dataDesign = data.frame(rows.name=colnames(dataFile),condition=c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"),
libType=c("single-end","single-end","single-end","single-end","single-end",
"single-end","single-end","single-end","single-end","single-end"))
condition = factor(c("Exp2","Exp2","Exp2","Exp2","Exp2",
"Ctl2","Ctl2","Ctl2","Ctl2","Ctl2"))
#The rest should run without modification
cds = newCountDataSet(dataFile,condition)
cds = estimateSizeFactors(cds)
sizeFactors(cds)
normTable = counts(cds,normalized=TRUE)
write.table(normTable,paste0(file_name, '.txt'),quote=FALSE,sep='\t')
cds = estimateDispersions(cds, method='pooled')
str(fitInfo(cds))
png(paste0(file_name, '.png'))
plotDispEsts(cds)
dev.off()
res = nbinomTest(cds,"Exp2","Ctl2")
png(paste0(file_name, '.png'))
plotMA(res, ylim=c(-8,8))
##take out infinite values and NaN values and replot MA plot
#convert res to tbl and remove -Inf and Inf values
tbl_res <- tbl_df(res)
tbl_res_no_inf <- filter(tbl_res, log2FoldChange != -Inf, log2FoldChange != Inf)
png(paste0(file_name, '.png'))
plotMA(tbl_res_no_inf)
dev.off()
resSig = res[ res$padj < 0.05, ]
resSig = res
resSig = resSig[ order(resSig$pval), ]
#add info to no_inf_file
write.table(resSig,paste0(file_name, '_output.csv'),quote=FALSE,sep=',',row.names=FALSE)
write.table(tbl_res_no_inf,paste0(file_name, '_output_no_inf.csv'),quote=FALSE,sep=',',row.names=FALSE)
savehistory(file=paste0(file_name, '.txt'))
